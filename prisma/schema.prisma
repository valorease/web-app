generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Consumer {
  id        Int      @id @default(autoincrement())
  publicId  String   @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name     String
  email    String @unique
  password String

  plan   Plan @relation(fields: [planId], references: [id])
  planId Int

  Product Product[]
}

model Product {
  id        Int      @id @default(autoincrement())
  publicId  String   @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String
  slug        String
  target      String
  lastSearch  DateTime?
  average     Float?

  consumer   Consumer @relation(fields: [consumerId], references: [id])
  consumerId Int

  ProductHistory ProductHistory[]
}

model ProductHistory {
  id       Int    @id @default(autoincrement())
  publicId String @unique @default(uuid())

  price Float
  url   String

  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Plan {
  id       Int    @id @default(autoincrement())
  publicId String @unique @default(uuid())

  name        String
  description String
  price       Float

  productQuantityLimit          Int
  viewHistoryLimitInMonths      Int
  updateProductTimeWindowInDays Int
  reportType                    Int

  PlanBenefits PlanBenefits[]
  Consumer     Consumer[]
}

model PlanBenefits {
  id       Int    @id @default(autoincrement())
  publicId String @unique @default(uuid())

  name        String
  description String

  plan   Plan @relation(fields: [planId], references: [id])
  planId Int
}
